// <auto-generated />
using System;
using Crunch.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Crunch.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200411015046_UserUpdated6")]
    partial class UserUpdated6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Crunch.Models.Class", b =>
                {
                    b.Property<int>("ClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("gymID")
                        .HasColumnType("int");

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("space")
                        .HasColumnType("int");

                    b.Property<int>("spaceUsed")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassID");

                    b.HasIndex("gymID");

                    b.ToTable("classes");
                });

            modelBuilder.Entity("Crunch.Models.Gym", b =>
                {
                    b.Property<int>("gymID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("gymAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gymLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gymNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.HasKey("gymID");

                    b.ToTable("gyms");
                });

            modelBuilder.Entity("Crunch.Models.Promocode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Expire")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<bool>("OneTime")
                        .HasColumnType("bit");

                    b.Property<int>("discountPercent")
                        .HasColumnType("int");

                    b.Property<string>("promocode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("ID");

                    b.ToTable("promocodes");
                });

            modelBuilder.Entity("Crunch.Models.Trainer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Qualifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("aboutMe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("gymID")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("gymID");

                    b.ToTable("trainers");
                });

            modelBuilder.Entity("Crunch.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("dateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("disability")
                        .HasColumnType("bit");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("gymID")
                        .HasColumnType("int");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("membershipActiveTill")
                        .HasColumnType("datetime2");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("paymentOption")
                        .HasColumnType("int");

                    b.Property<string>("pin")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("premiumMemberShip")
                        .HasColumnType("bit");

                    b.Property<int?>("promocodeID")
                        .HasColumnType("int");

                    b.Property<bool>("recieveEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("recieveSMS")
                        .HasColumnType("bit");

                    b.HasKey("UserID");

                    b.HasIndex("gymID");

                    b.HasIndex("promocodeID");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Crunch.Models.UserClass", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("ClassID")
                        .HasColumnType("int");

                    b.Property<long>("UserClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("UserID", "ClassID");

                    b.HasIndex("ClassID");

                    b.ToTable("UserClass");
                });

            modelBuilder.Entity("Crunch.Models.Class", b =>
                {
                    b.HasOne("Crunch.Models.Gym", "gym")
                        .WithMany("Classes")
                        .HasForeignKey("gymID");
                });

            modelBuilder.Entity("Crunch.Models.Trainer", b =>
                {
                    b.HasOne("Crunch.Models.Gym", "gym")
                        .WithMany()
                        .HasForeignKey("gymID");
                });

            modelBuilder.Entity("Crunch.Models.User", b =>
                {
                    b.HasOne("Crunch.Models.Gym", "gym")
                        .WithMany()
                        .HasForeignKey("gymID");

                    b.HasOne("Crunch.Models.Promocode", "promocode")
                        .WithMany()
                        .HasForeignKey("promocodeID");
                });

            modelBuilder.Entity("Crunch.Models.UserClass", b =>
                {
                    b.HasOne("Crunch.Models.Class", "class")
                        .WithMany("userClasses")
                        .HasForeignKey("ClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Crunch.Models.User", "user")
                        .WithMany("userClasses")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
